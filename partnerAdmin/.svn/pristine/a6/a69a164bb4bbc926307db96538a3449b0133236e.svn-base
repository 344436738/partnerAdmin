<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/rabbit
     http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd">
	<!--配置connection-factory，指定连接rabbit server参数 -->
	<rabbit:connection-factory id="connectionFactory"
		username="guest" password="guest" host="127.0.0.1" port="5672" />
		
	<!--定义rabbit template用于数据的接收和发送 -->
	<rabbit:template id="amqpTemplate"  connection-factory="connectionFactory" 
	    exchange="exchangeTest" />
		
	<!--通过指定下面的admin信息，当前producer中的exchange和queue会在rabbitmq服务器上自动生成 -->
	<rabbit:admin connection-factory="connectionFactory" />

	<!--定义queue -->
	<rabbit:queue name="queueTest" durable="true" auto-delete="false" exclusive="false" />
    <!-- 配置线程池 -->  
	<bean id ="taskExecutor"  class ="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor" >  
	    <!-- 线程池维护线程的最少数量 -->  
	<property name ="corePoolSize" value ="5" />  
	    <!-- 线程池维护线程所允许的空闲时间 -->  
	<property name ="keepAliveSeconds" value ="30000" />  
	    <!-- 线程池维护线程的最大数量 -->  
	<property name ="maxPoolSize" value ="5" />  
	    <!-- 线程池所使用的缓冲队列 -->  
	<property name ="queueCapacity" value ="10" />  
	</bean>
	
	
	<!-- 定义direct exchange，绑定queueTest -->
	<rabbit:direct-exchange name="exchangeTest" durable="true" auto-delete="false">
		<rabbit:bindings>
			<rabbit:binding queue="queueTest" key="queueTestKey"></rabbit:binding>
		</rabbit:bindings>
	</rabbit:direct-exchange>
	
	<!-- 消息接收者 -->
	<bean id="messageReceiver" class="com.base.service.MessageConsumer"></bean>
	
	<!-- queue litener  观察 监听模式 当有消息到达时会通知监听在对应的队列上的监听对象 concurrency是指多消费者-->
<!--     <rabbit:listener-container connection-factory="connectionFactory" concurrency="3" acknowledge="auto" task-executor="taskExecutor"> -->
<!--              <rabbit:listener queues="queueTest" ref="messageReceiver"/> -->
<!--     </rabbit:listener-container> -->
	
</beans>